#!/bin/sh -e

##########################################################################
#   Script description:
#       Run quality checks on raw and trimmed data for comparison
#       Based on work of Dr. Andrea Rau:
#       https://github.com/andreamrau/OpticRegen_2019
#
#       All necessary tools are assumed to be in PATH.  If this is not
#       the case, add whatever code is needed here to gain access.
#       (Adding such code to your .bashrc or other startup script is
#       generally a bad idea since it's too complicated to support
#       every program with one environment.)
#
#   History:
#   Date        Name        Modification
#   2019-09-13  Jason Bacon Begin
##########################################################################

# Set job array to number of samples
# Each invocation of this script will run 2 fastqc processes, forward
# and reverse
#lpjs jobs 15
#lpjs processors-per-job 2
#lpjs threads-per-process processors-per-job
# Generated by lpjs peak-mem 02-qc-raw.lpjs
#lpjs pmem-per-processor 609MiB

# Document software versions used for publication
uname -a
#fastqc --version
pwd

# Set a default value for testing outside the SLURM environment
: ${LPJS_ARRAY_INDEX:=1}
sample=$LPJS_ARRAY_INDEX

# Raw files from sequencing center
raw1=$(ls Results/01-organize/Raw-renamed/*sample${sample}-*R1*.fastq.gz)
raw2=$(ls Results/01-organize/Raw-renamed/*sample${sample}-*R2*.fastq.gz)

# Filename stems for fastqc output
stem_raw1=$(basename ${raw1%.fastq.gz})
stem_raw2=$(basename ${raw2%.fastq.gz})

output_dir=Results/02-qc-raw
mkdir -p $output_dir

# Background the first three to run 4 jobs in parallel
zcat $raw1 | fastqc -o $output_dir stdin:$stem_raw1 &
zcat $raw2 | fastqc -o $output_dir stdin:$stem_raw2

# Make sure backgrounded job completes before terminating script
wait
