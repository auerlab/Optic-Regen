#!/bin/sh -e

##########################################################################
#   Description:
#       Run hisat2 aligner on each RNA sample.
#
#       All necessary tools are assumed to be in PATH.  If this is not
#       the case, add whatever code is needed here to gain access.
#       (Adding such code to your .bashrc or other startup script is
#       generally a bad idea since it's too complicated to support
#       every program with one environment.)
#       
#   History:
#   Date        Name        Modification
#   2021-11-24  Jason Bacon Begin
##########################################################################

#lpjs jobs 15
#lpjs processors-per-job 4
#lpjs threads-per-process processors-per-job
#lpjs pmem-per-processor 1500MiB

##############################################################################
# Align with hisat2, which can handle splice junctions in RNA reads

# Set a default value for testing outside the SLURM environment
: ${LPJS_ARRAY_INDEX:=1}
: ${LPJS_THREADS_PER_PROCESS:=2}
sample=$LPJS_ARRAY_INDEX

# Document software versions used for publication
uname -a
hisat2 --version
pwd

build=$(../../Common/genome-build.sh)
release=$(../../Common/genome-release.sh)
genome=$(Reference/genome-filename.sh)

# samtools sort dumps temp files in CWD
output_dir=Results/13-hisat2-align
mkdir -p $output_dir
cd $output_dir

# hisat2 can't yet read zstd inputs.
# https://github.com/DaehwanKimLab/hisat2/issues/412
# It also cannot read input from a pipe (performs seeks?)
# If your trimmed fastq files are in zstd
# format, this will convert to gzip format.
# Convert zstd to gz rather than raw to reduce NFS/IO load from compute nodes
# --fast minimizes CPU usage in exchange for larger files
zst1=$(echo ../04-trim/*sample${sample}-*-R1.fastq.zst)
zst2=$(echo ../04-trim/*sample${sample}-*-R2.fastq.zst)
gz1=${zst1%.zst}.gz
gz2=${zst2%.zst}.gz
gz1=$(basename $gz1)
gz2=$(basename $gz2)
bam=${gz1%-R*}.bam

set -x
test -e $gz1 || zstdcat $zst1 | gzip --fast --stdout > $gz1 &
test -e $gz2 || zstdcat $zst2 | gzip --fast --stdout > $gz2
wait
# Use 1 processor for samtools and N - 1 for hisat2
# Option: Use samtools sort -T tempdir to use local disks for temp files rather than NFS
hisat2 --threads $(($LPJS_THREADS_PER_PROCESS - 1)) \
    -x ../12-hisat2-index/$genome -1 $gz1 -2 $gz2 | samtools sort > $bam
samtools index $bam
