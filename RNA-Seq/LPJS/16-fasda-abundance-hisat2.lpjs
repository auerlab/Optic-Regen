#!/bin/sh -e

#
#   Dependencies:
#       Requires hisat2 alignments.  Run after *-hisat2-align.lpjs.

# Computing abundances takes a little while, so we do this in parallel
# Memory requirements can only be determined by trial and error.
# Run a sample job and monitor closely in "top" or run under a tool that
# reports maximum memory use.

# One job per sample
#lpjs jobs 15
# 2 threads for stringtie
#lpjs processors-per-job 2
#lpjs threads-per-process processors-per-job
# Generated by lpjs peak-mem 16-fasda-abundance-hisat2.lpjs
#lpjs pmem-per-processor 216MiB

##############################################################################
# Update PATH on a chimeric cluster (multiple operating systems used for
# compute nodes)
#
# The PATH used by the package manager that installed LPJS (/usr/local for
# FreeBSD ports, usually /usr/pkg or /*/pkg for pkgsrc), is automatically
# prepended to the default PATH.  This is overridden by "#lpjs path", so
# if we use it, we must add all directories ourselves.
#
# Add the default non-priveleged pkgsrc prefix used by auto-pkgsrc-setup.
#
# Caution: Different versions of rsync behave differently with respect
# to creating path components at the destination.  Newer rsync requires
# --mkpath while older ones included with macOS and RHEL do not support
# this flag. Set path to use pkgsrc rsync in ~/Pkgsrc/pkg or /*/pkg.
#lpjs path ~/Pkgsrc/pkg/bin:/opt/pkg/bin:/usr/pkg/bin:/usr/local/bin:/usr/bin:/bin
#lpjs pull-command rsync -r --copy-links %h:%s/Reference . && rsync -r --copy-links %h:%s/Common . && rsync --mkpath -r %h:%s/Results/07-reference/\*.gff3 Results/07-reference/ && rsync --mkpath -r %h:%s/Results/12-hisat2-align/\*sample%i-\*.bam* Results/12-hisat2-align
# This assumes Results/12-hisat2-align exists on the submit node
# This is true if 01-organize.sh was run
#lpjs push-command rsync -r Results/16-fasda-abundance-hisat2 %h:%s/Results

# Set a default value for testing outside the SLURM environment
: ${LPJS_ARRAY_INDEX:=1}

# Document software versions used for publication
uname -a
fasda --version
samtools --version
pwd

hisat2_dir=Results/12-hisat2-align
fasda_dir=Results/16-fasda-abundance-hisat2

# In case we're running in a temp dir with file transfer
mkdir -p $fasda_dir

# Need to fetch gff3 for computing abundances
gff_filename=$(Reference/gff-filename.sh)
reference_dir=Results/07-reference

##########################################################################
#   Compute abundances
##########################################################################

# Change this and #lpjs jobs above to rerun limited samples
sample=$LPJS_ARRAY_INDEX

# Example: chondro-sample1-rep1-time1.bam
file=$(ls $hisat2_dir/sample$sample-*.bam)

fasda abundance \
    --output-dir $fasda_dir \
    100 \
    $reference_dir/$gff_filename \
    $file

ab=${file%.bam}-abundance.tsv
head $fasda_dir/$(basename $ab)
